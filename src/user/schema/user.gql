union UserResponse = Success | Error

type Success {
  data: Data
}

type Data {
  user: User!
}

type Error {
  error: ErrorMessage!
}

type ErrorMessage {
  message: String!
}

type Query {
  users: [User!]!
  user: User!
  userByUsername(username: String): UserResponse!
  getFollowers: [User]
  getFollowing: [User]
}

type Mutation {
  addCover(file: Upload!): User!
  followUser(username: String!): Boolean!
  updateUser(input: UserInput, file: Upload): User!
  deleteUser(userId: String): Boolean!
}

type User {
  id: ID!
  firstName: String
  lastName: String
  userName: String!
  email: String
  followers: [User]
  following: [User]
  refreshToken: String
  bio: String
  location: String
  image: String
  cover: String
  session: String
  activities: [Post]
  isVerified: Boolean
  createdAt: Date
  updatedAt: Date
}

input UserInput {
  firstName: String
  lastName: String
  userName: String
  email: String
  bio: String
  location: String
  image: String
  cover: String
}

